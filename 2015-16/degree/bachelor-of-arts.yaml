name: Bachelor of Arts
type: degree
catalog: 2015-16

result:
  all:
    - reference: Degree Requirements
    - reference: General Education

requirements:
  Degree Requirements:
    result:
      all:
        - reference: Courses
        - reference: Residency
        - reference: Interim
        - reference: Grade Point Average
        - reference: Course Level
        - reference: Graded Courses
        - reference: Major

    requirements:
      Courses:
        result:
          from: {student: courses}
          assert: sum(credits) >= 35

      Residency:
        result:
          from: {student: courses}
          where: {institution: {$eq: St. Olaf College}}
          assert: sum(credits) >= 17

      Interim:
        result:
          from: {student: courses}
          where: {semester: {$eq: Interim}}
          assert: {$and: [{count(courses): {$gte: 3}}, {sum(credits): {$gte: 3}}]}

      Grade Point Average:
        result:
          from: {student: courses}
          assert: average(grades) >= C

      Course Level:
        result:
          from: {student: courses}
          where: {level: {$gte: 200}}
          assert: sum(credits) >= 18

      Graded Courses:
        result:
          from: {student: courses}
          where: {graded: {$eq: true}}
          assert: sum(credits) >= 24

      Major:
        result:
          from: {student: areas}
          where: {type: {$eq: major}}
          assert: count(areas) >= 1


  General Education:
    result:
      all:
        - reference: Foundation
        - reference: Core
        - reference: Integrative

    requirements:
      Foundation:
        result:
          all:
            - reference: First-Year Writing
            - reference: Writing in Context
            - reference: Foreign Language
            - reference: Oral Communication
            - reference: Abstract and Quantitative Reasoning
            - reference: Studies in Physical Movement

        requirements:
          First-Year Writing:
            result:
              from: {student: courses}
              where: {gereqs: {$eq: FYW}}
              assert: count(courses) >= 1

          Writing in Context:
            result:
              from: {student: courses}
              where: {gereqs: {$eq: WRI}}
              assert: count(courses) >= 4

          Foreign Language:
            result:
              from: {student: courses}
              where: {gereqs: {$in: [FOL-C, FOL-F, FOL-G, FOL-K, FOL-J, FOL-L, FOL-N, FOL-R, FOL-S]}}
              assert: count(courses) >= 1

          Oral Communication:
            result:
              from: {student: courses}
              where: {gereqs: {$eq: ORC}}
              assert: count(courses) >= 1

          Abstract and Quantitative Reasoning:
            result:
              from: {student: courses}
              where: {gereqs: {$eq: AQR}}
              assert: count(courses) >= 1

          Studies in Physical Movement:
            result:
              from: {student: courses, repeats: first}
              where: {gereqs: {$eq: SPM}}
              assert: count(courses) >= 2

      Core:
        result:
          all:
            - reference: Historical Studies in Western Culture
            - reference: Multicultural Studies
            - reference: Artistic and Literary Studies
            - reference: Biblical and Theological Studies
            - reference: Studies in Natural Science
            - reference: Studies in Human Behavior and Society

        requirements:
          Historical Studies in Western Culture:
            message:
              One course must be taught by a St. Olaf professor.

            saves:
              Courses with an HWC:
                from: {student: courses}
                where: {gereqs: {$eq: HWC}}
                store: courses

            result:
              all:
                - from: {save: Courses with an HWC}
                  assert: count(courses) >= 2

                - from: {save: Courses with an HWC}
                  where: {institution: {$eq: St. Olaf College}}
                  assert: count(courses) >= 1

          Multicultural Studies:
            saves:
              Courses with an MCD or MCG:
                from: {student: courses}
                where: {$or: [{gereqs: {$eq: MCD}}, {gereqs: {$eq: MCG}}]}
                store: courses

            result:
              all:
                - from: {save: Courses with an MCD or MCG}
                  assert: count(courses) >= 2 and count(subjects) >= 2

                - from: {save: Courses with an MCD or MCG}
                  where: {gereqs: {$eq: MCD}}
                  assert: count(courses) >= 1

                - from: {save: Courses with an MCD or MCG}
                  where: {gereqs: {$eq: MCG}}
                  assert: count(courses) >= 1

          Artistic and Literary Studies:
            saves:
              Courses with an ALS-A or ALS-L:
                from: {student: courses}
                where: gereqs = ALS-A or gereqs = ALS-L
                store: courses

            result:
              all:
                - from: {save: Courses with an ALS-A or ALS-L}
                  assert: count(courses) >= 2

                - from: {save: Courses with an ALS-A or ALS-L}
                  where: gereqs = ALS-A
                  assert: count(courses) >= 1

                - from: {save: Courses with an ALS-A or ALS-L}
                  where: gereqs = ALS-L
                  assert: count(courses) >= 1

          Biblical and Theological Studies:
            saves:
              Courses with a BTS-B or BTS-T:
                from: {student: courses}
                where: gereqs = BTS-B or gereqs = BTS-T
                store: courses

            result:
              all:
                - from: {save: Courses with a BTS-B or BTS-T}
                  assert: count(courses) >= 2

                - from: {save: Courses with a BTS-B or BTS-T}
                  where: gereqs = BTS-B
                  assert: count(courses) >= 1

                - from: {save: Courses with a BTS-B or BTS-T}
                  where: gereqs = BTS-T
                  assert: count(courses) >= 1

          Studies in Natural Science:
            saves:
              Courses with an SED or IST:
                from: {student: courses}
                where: gereqs = SED or gereqs = IST
                store: courses

            result:
              all:
                - from: {save: Courses with an SED or IST}
                  assert: count(courses) >= 2 and count(subjects) >= 2

                - from: {save: Courses with an SED or IST}
                  where: gereqs = SED
                  assert: count(courses) >= 1

                - from: {save: Courses with an SED or IST}
                  where: gereqs = IST
                  assert: count(courses) >= 1

          Studies in Human Behavior and Society:
            saves:
              Courses with an HBS:
                from: {student: courses}
                where: gereqs = HBS
                store: courses

            result:
              all:
                - from: {save: Courses with an HBS}
                  assert: count(courses) >= 2 and count(subjects) >= 2

                - from: {save: Courses with an HBS}
                  where: institution = St. Olaf College
                  assert: count(courses) >= 1

      Integrative:
        result:
          reference: Ethical Issues and Normative Perspectives

        requirements:
          Ethical Issues and Normative Perspectives:
            message:
              To complete any EIN course, you must have either completed your
              BTS-T general education requirement, or have obtained permission
              of the EIN instructor beforehand.

            saves:
              EIN courses:
                from: {student: courses}
                where: gereqs = EIN
                store: courses

              bts_t:
                from: {student: courses, including used: true}
                where: gereqs = BTS-T
                store: minimum(term)

              ein:
                from: {save: EIN courses}
                store: maximum(term)

            result:
              all:
                - from: {save: EIN courses}
                  assert: count(courses) >= 1

                - assert: stored(bts_t) < stored(ein)
