name: Music
type: major
degree: Bachelor of Arts
catalog: 2018-19

result:
  all:
    - requirement: Core
    - requirement: Musicology
    - requirement: Electives
    - requirement: Performance Studies
    - requirement: Official Ensemble Participation
    - requirement: Performances
    - requirement: Recital Attendance

requirements:
  Core:
    result:
      all:
        - course: MUSIC 114
        - course: MUSIC 141
        - {course: MUSIC 161, grade: B-}
        - {course: MUSIC 162, grade: B-}
        - either:
          - course: MUSIC 212
          - course: MUSIC 214

  Musicology:
    result:
      count: 1
      of:
        - course: MUSIC 340
        - course: MUSIC 341
        - course: MUSIC 342
        - course: MUSIC 343
        - course: MUSIC 344
        - course: MUSIC 345
        - course: MUSIC 346
        - course: MUSIC 347
        - course: MUSIC 348
        - course: MUSIC 349

  Electives:
    result:
      from: {student: courses}
      where: subject = MUSIC and (level = 200 or level = 300)
      limit:
        - {at most: 3, where: level = 200}
      assert: count(courses) >= 4

  Performance Studies:
    message:
      6 semesters; 4 in the same instrument/voice

    result:
      any:
        - requirement: Bassoon
        - requirement: Clarinet
        - requirement: Drumset
        - requirement: Euphonium
        - requirement: Flute
        - requirement: French Horn
        - requirement: Hardanger Fiddle
        - requirement: Harp
        - requirement: Harpsichord
        - requirement: Jazz Piano
        - requirement: Jazz Saxophone
        - requirement: Oboe
        - requirement: Organ
        - requirement: Percussion
        - requirement: Piano
        - requirement: Saxophone
        - requirement: String Bass
        - requirement: Trombone
        - requirement: Trumpet
        - requirement: Tuba
        - requirement: Viola
        - requirement: Violin
        - requirement: Violoncello
        - requirement: Voice

    requirements:
      Bassoon:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 102, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 102, assert: count(terms) >= 2}

      Clarinet:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 104, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 104, assert: count(terms) >= 2}

      Coll Keyboard Perfor:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 106, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 106, assert: count(terms) >= 2}

      Drumset:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 109, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 109, assert: count(terms) >= 2}

      Euphonium:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 112, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 112, assert: count(terms) >= 2}

      Flute:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 114, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 114, assert: count(terms) >= 2}

      French Horn:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 116, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 116, assert: count(terms) >= 2}

      Hardanger Fiddle:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 118, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 118, assert: count(terms) >= 2}

      Harp:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 120, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 120, assert: count(terms) >= 2}

      Harpsichord:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 122, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 122, assert: count(terms) >= 2}

      Jazz Piano:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 124, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 124, assert: count(terms) >= 2}

      Oboe:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 126, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 126, assert: count(terms) >= 2}

      Organ:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 128, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 128, assert: count(terms) >= 2}

      Percussion:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 132, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 132, assert: count(terms) >= 2}

      Piano:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 134, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 134, assert: count(terms) >= 2}

      Jazz Saxophone:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 135, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 135, assert: count(terms) >= 2}

      Saxophone:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 136, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 136, assert: count(terms) >= 2}

      String Bass:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 138, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 138, assert: count(terms) >= 2}

      Trombone:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 140, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 140, assert: count(terms) >= 2}

      Trumpet:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 142, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 142, assert: count(terms) >= 2}

      Tuba:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 144, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 144, assert: count(terms) >= 2}

      Viola:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 146, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 146, assert: count(terms) >= 2}

      Violin:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 148, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 148, assert: count(terms) >= 2}

      Violoncello:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 150, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 150, assert: count(terms) >= 2}

      Voice:
        result:
          from: {requirements: [Lessons, Other Lessons]}
          assert: count(terms) >= 6
        requirements:
          Lessons:
            result: {from: {student: courses}, where: course = MUSPF 152, assert: count(terms) >= 4}
          Other Lessons:
            result: {from: {student: courses}, where: subject = MUSPF and number != 152, assert: count(terms) >= 2}


  Official Ensemble Participation:
    result:
      from: {student: courses}
      where: subject = MUSEN
      assert: count(terms) >= 4

  Performances:
    message:
      Two solo performances on a St. Olaf Student Recital.
    result:
      from: {student: music performances}
      where: solo = true
      assert: count(performances) >= 2

  Recital Attendance:
    message:
      You must attend 10 recitals per semester on campus, with a minimum of 60 overall.
    result:
      from: {student: music performances}
      where: attended = true
      assert: count(performances) >= 60


emphases:
  limits: []

  choices:
    Composition:
      result:
        all:
          - requirement: Courses
          - requirement: Lessons
          - requirement: Performances
          - requirement: Portfolio

      requirements:
        Courses:
          result:
            all:
              - course: MUSIC 225
              - course: MUSIC 324

        Lessons:
          result:
            from: {student: courses}
            where: course = MUSPF 326
            assert: count(terms) >= 4

        Performances:
          message:
            2 composition performances, at least 1 in junior or senior year
          saves:
            All Performances:
              from: {student: music performances}
              where: performed = true and (type = AAA or type = BBB)
              store: performances
          result:
            both:
              - from: {save: All Performances}
                assert: count(performances) >= 2
              - from: {save: All Performances}
                where: year = $senior-year or year = $junior-year
                assert: count(performances) >= 1

        Portfolio:
          message:
            With approval of the composition faculty, the student submits a
            portfolio of at least 3 compositions previously submitted for Level
            III composition courses to the Music Office by May 1 of the senior
            year
          department_audited: true

    Musicology:
      result:
        all:
          - requirement: Courses
          - requirement: More Courses
          - requirement: Portfolio

      requirements:
        Courses:
          result:
            count: 2
            of:
              - course: MUSIC 340
              - course: MUSIC 341
              - course: MUSIC 342
              - course: MUSIC 343
              - course: MUSIC 344
              - course: MUSIC 345
              - course: MUSIC 346
              - course: MUSIC 347
              - course: MUSIC 348
              - course: MUSIC 349

        More Courses:
          result:
            any:
              - course: MUSIC 312
              - course: MUSIC 313
              - course: MUSIC 314
              - course: MUSIC 340
              - course: MUSIC 341
              - course: MUSIC 342
              - course: MUSIC 343
              - course: MUSIC 344
              - course: MUSIC 345
              - course: MUSIC 346
              - course: MUSIC 347
              - course: MUSIC 348
              - course: MUSIC 349

        Portfolio:
          message:
            With approval of the musicology faculty, the student submits a
            portfolio of at least 3 papers previously submitted for Level III
            musicology courses to the Music Office by May 1 of the senior year.
            One of these must be revised with faculty supervision to demonstrate
            the student's best work in musiciology
          department_audited: true

    Theory:
      result:
        all:
          - requirement: Courses
          - requirement: Portfolio

      requirements:
        Courses:
          result:
            all:
              - MUSIC 312
              - MUSIC 313
              - MUSIC 314

        Portfolio:
          message:
            With approval of the theory faculty, the student submits a portfolio
            of at least 3 papers previously submitted for Level III theory
            courses to the Music Office by May 1 of the senior year. One of these
            must be revised with faculty supervision to demonstrate the student's
            best work in music analysis
          department_audited: true
